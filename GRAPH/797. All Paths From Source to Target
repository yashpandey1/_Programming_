class Solution {
public:

    void help(vector<vector<int>>& graph,int node, vector<int>& path, vector<vector<int>>& ans, int end)
    {
        path.push_back(node);
        for(int i=0;i<graph[node].size();i++)
        {
            help(graph, graph[node][i], path, ans, end);   
        }
        if(path[path.size()-1]==end) ans.push_back(path);
        path.pop_back();
    }

    vector<vector<int>> allPathsSourceTarget(vector<vector<int>>& graph) {
        int start = 0;
        int end = graph.size()-1;

        vector<int> path;
        vector<vector<int>> ans;

        help(graph, start, path, ans, end);
        return ans;
    }
};
