class Solution {
public:
    int equalSubstring(string s, string t, int maxCost) {
        vector<int> diff(s.length());
        for(int i=0;i<s.length();i++)
            diff[i]=abs(s[i]-t[i]);
        
        //  Variable size sliding window to get the maximum length of the string under the maxCost
        int i=0, j=0, sum=0, ans=0;
        int n=diff.size();
        while(j<n){
            sum+=diff[j];
            if( sum <= maxCost ){
                ans=max(ans,j-i+1);
            }
            else{
                while(sum > maxCost){
                    sum-=diff[i];
                    i++;
                }
            }
            j++;
        }
        return ans;
    }
};
