class Solution {
public:

    ListNode* reverse(ListNode* head){
        ListNode* prev = nullptr;
        ListNode* curr = head;
        ListNode* forw;
        
        while(curr!=nullptr){
            forw=curr->next;
            curr->next = prev;
            prev=curr;
            curr=forw;
        }
        return prev;
    }

    bool isPalindrome(ListNode* head) {
        if(head->next==nullptr) return true;
        int ct;
        ListNode* temp = head;
        while( temp!=nullptr){
            ct++;
            temp=temp->next;
        }
        ListNode* slow = head;
        ListNode* fast = head;
        while( fast!=nullptr && fast->next!=nullptr )
        {
            slow=slow->next;
            fast=fast->next->next;
        }
        if(ct%2==1) temp = reverse(slow->next);
        else temp = reverse(slow);
        
        while(temp!=NULL){
            if(head->val!=temp->val) return false;
            head=head->next;
            temp=temp->next;
        }
        return true;
    }
};
